@page "/Chat"

@using Microsoft.AspNetCore.SignalR.Client
@using BlazorWasm.Shared.Models

<PageTitle>Chat</PageTitle>

<h1>Chat</h1>

<div>
    <div>
        <label for="username-input">UserName</label><br/>
        <input id="username-input" placeholder="Your UserName..."
               @bind="_messageToSend.SenderUserName" />
    </div><br/>
    
    <div>
        <label for="content-input">Message</label><br/>
        <textarea id="content-input" placeholder="Your Message..."
                 @bind="_messageToSend.Content"></textarea>
    </div><br/>
    
    <button @onclick="OnSendMessageClick">Send message</button>
</div><br/>

@foreach (var message in _messages)
{
    <p>@message.SendTime</p>
    <p>@message.SenderUserName</p>
    <p>@message.Content</p><br/>
}

@code {
    private HubConnection _hubConnection;
    private readonly IList<MessageDto> _messages = new List<MessageDto>();
    private readonly MessageDto _messageToSend = new();

    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl("http://localhost:4001/hubs/chat")
            .WithAutomaticReconnect()
            .Build();

        _hubConnection.On<MessageDto>("ReceiveMessage", OnReceiveMessage);

        await _hubConnection.StartAsync();
        
        await base.OnInitializedAsync();
    }

    private void OnReceiveMessage(MessageDto message)
    {
        _messages.Insert(0, message);
        StateHasChanged();
    }

    private async void OnSendMessageClick()
    {
        _messageToSend.SendTime = DateTime.UtcNow;
        await _hubConnection.SendAsync("SendMessage", _messageToSend);
    }
}